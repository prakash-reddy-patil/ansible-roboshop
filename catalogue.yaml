- name: setup catalogue server
  hosts: catalogue
  become: yes
  tasks:
  - name: disable default node js module
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable module nodejs:20
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: Install nodejs
    ansible.builtin.package:
      name: nodejs
      state: present
  
  - name: create roboshop system user
    ansible.builtin.user:
      name: roboshop
      comment: Roboshop system user
      system: true
      shell: /sbin/nologin
      home: /app

  - name: create app directory
    ansible.builtin.file:
      state: directory
      path: /app

  - name: download the cataloge application
    ansible.builtin.get_url: 
      url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip
      dest: /tmp/catalogue.zip

  - name: extract catalogue application
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes          # unarchive a file that is alrady in remote server

  - name: install dependencies
    community.general.npm:
      path: /app/
    
  - name: copy catalogue service
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service

  
  - name: copy mongo repo
    ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: instal mongodb clint
    ansible.builtin.package:
      name: mongodb-mongosh
      state: present

  
  - name: connnect to mongodb catalogue
    ansible.builtin.command: mongosh mongodb.divyavutakanti.shop --quiet --eval "db.getMongo().getDBNames().indexOf('catalogue')"
    register: catalogue_output

  # - name: evaluate cataalogue database
  #   community.mongodb.mongodb_shell:
  #     login_host: mongodb.divyavutakanti.shop
  #     eval: db.getMongo().getDBNames().indexOf('catalogue')
  #   register: catalogue_output

  # - name: print catalogue output
  #   ansible.builtin.debug:
  #     msg: "{{ catalogue_output }}"

  - name: load products into mongodb
    ansible.builtin.shell: mongosh --host mongodb.divyavutakanti.shop </app/db/master-data.js
    when: catalogue_output.stdout | int < 0

  # - name: start and enable cataalogue
  #   ansible.builtin.service:
  #     name: catalogue
  #     enabled: yes
  #     state: started

  - name: daemon reload enable and start
    ansible.builtin.systemd_service:
      name: catalogue
      enabled: true
      state: started
      daemon_reload: true    # daemon_reload: true tells systemd to reload its service configuration files


# ansible create user module =>  ansible.builtin.user
# ansible create directory => ansible.builtin.file
# ansible download file =>  ansible.builtin.get_url
# ansible unzip file => ansible.builtin.unarchive
# ansible.builtin.systemd => is a module in Ansible used to manage services It helps you start, stop, restart, enable, or disable a service