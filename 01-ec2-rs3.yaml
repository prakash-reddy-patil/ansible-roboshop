
- name: create ec2 and r53
  hosts: local
  connection: local
  vars:
    ami_id: ami-09c813fb71547fc4f
    sg_id: sg-0efa44683880e26a2       # replace with your SG ID
    zone_id: "Z04186342ATITR80K0PR0"    # replace with your ID
    domain_name: "divyavutakanti.shop"
    # we can pass instances through command line using -e
    instances: 
      #- mongodb
      # - redis
      # - mysql
      # - rabbitmq
  tasks:
  - name: create ec2 instance
    amazon.aws.ec2_instance:
      name: "{{ item }}"
      instance_type: t3.micro
      security_group: "{{ sg_id }}"
      image_id: "{{ ami_id }}"
      tags:
        Name: "{{ item }}"
    loop: "{{ instances }}"
    register: ec2_output

  # - name: print the ec2_output
  #   ansible.builtin.debug:
  #     msg: "{{ ec2_output }}"

  # - name: print public_ip
  #   ansible.builtin.debug: 
  #     msg: "{{ item.instances[0].public_ip_address }}"
  #   loop: "{{ ec2_output.results }}"

  # - name: print private_ip
  #   ansible.builtin.debug: 
  #     msg: "{{ item.instances[0].private_ip_address }}"
  #   loop: "{{ ec2_output.results }}"

  - name: create route53 record
    amazon.aws.route53:
      state: present
      zone: "{{ domain_name }}"
      record: "{{ item.item }}.{{ domain_name }}" # mongodb.divyavutakanti.shop
      type: A
      ttl: 1
      value: "{{ item.instances[0].private_ip_address }}"
      overwrite: true
    loop: "{{ ec2_output.results }}"

  # we are creating one record with public only for frontend
  # - name: create route53 record for frontend
  #   amazon.aws.route53:
  #     state: present
  #     zone: "{{ domain_name }}"
  #     record: "{{ domain_name }}"   # divyavutakanti.shop
  #     type: A
  #     ttl: 1
  #     value: "{{ item.instances[0].public_ip_address }}"
  #     overwrite: true
  #   when: item.item == "frontend"
  #   loop: "{{ ec2_output.results }}"





# before you execute this script, need to authentication configure aws 
#  step-1
# 1) aws configure
# 2) Aws Access Key ID:  provide aws keyswhich you generate from user 
# 3) secret access key: provide secret key which you generate from user
# 4) Default region name [None]: us-east-1
# 5)Default output format [None]: just press enter
#---------------------------------------------------------------------------
# install libraries and dependencies =>  pip3.9  install botocore boto3 

# to pass arguments for creating instance => ansible-playbook -i inventory.ini   01-ec2-rs3.yaml -e "instances=['catalogue.yaml','user','cart']"
